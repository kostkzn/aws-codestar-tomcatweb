
- name: Setup Tomcat9 & Deploy Artifact
  hosts: webservers
  become: yes
  vars:
    timestamp: "{{ansible_date_time.date}}_{{ansible_date_time.hour}}_{{ansible_date_time.minute}}"
  tasks:
    - name: Download latest swapp.war from nexus
      get_url:
        url: "http://{{NEXUS_USER}}:{{NEXUS_PASS}}@{{NEXUSIP}}:8081/repository/{{RELEASE_REPO}}/{{NEXUS_GROUP_ID}}/{{NEXUS_ART_ID}}/v{{BUILD_ID}}-{{BUILD_TIMESTAMP}}--ROOT/{{NEXUS_ART_ID}}-v{{BUILD_ID}}-{{BUILD_TIMESTAMP}}--ROOT.war"
        dest: "/tmp/{{NEXUS_ART_ID}}-v{{BUILD_ID}}-{{BUILD_TIMESTAMP}}--ROOT.war"
      register: wardeploy
      tags:
       - deploy
       
    # statistic of current artifact. if exists then backup it
    - stat:
        path: /var/lib/tomcat9/webapps/ROOT
      register: artifact_stat
      tags:
       - deploy 
    # then we stop tomcat service
    - name: Stop tomcat9 svc
      service:
        name: tomcat9
        state: stopped
      tags:
       - deploy
    # Backup strategy for fail deploy
    - name: Try Backup and Deploy
      block:
      - name: Archive ROOT dir with timestamp
        archive:
          path: /var/lib/tomcat9/webapps
          dest: "/tmp/ROOT_{{timestamp}}.tgz"         
        when: artifact_stat.stat.exists
        register: archive_info
        tags:
         - deploy

      - name: copy ROOT dir with old_ROOT name
        shell: cp -r ROOT old_ROOT
        args:
          chdir: /var/lib/tomcat9/webapps/

      - name: Delete current artifact
        file:
          path: "{{item}}"
          state: absent
        when: archive_info.changed
        loop:
         - /var/lib/tomcat9/webapps/ROOT
         - /var/lib/tomcat9/webapps/ROOT.war
        tags:
         - deploy

      - name: Try deploy artifact else restore from previos old_ROOT
        block:
         - name: Deploy swapp artifact
           copy:
             src: "/tmp/{{NEXUS_ART_ID}}-v{{BUILD_ID}}-{{BUILD_TIMESTAMP}}--ROOT.war"             
             dest: /var/lib/tomcat9/webapps/ROOT.war
             remote_src: yes
           register: deploy_info
           tags:
            - deploy
        rescue:
          - shell: cp -r old_ROOT ROOT
            args:
              chdir: /var/lib/tomcat9/webapps/

      rescue:
        - name: Start Tomcat9 svc
          service:
            name: tomcat9
            state: started

    - name: Start Tomcat9 svc
      service:
        name: tomcat9
        state: started
      when: deploy_info.changed
      tags:
       - deploy

    - name: Wait until ROOT.war is extracted to ROOT directory
      wait_for:
        path: /var/lib/tomcat9/webapps/ROOT
      tags:
       - deploy
       
